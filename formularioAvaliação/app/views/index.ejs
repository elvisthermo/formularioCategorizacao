<!DOCTYPE html>
<html lang="pt-br">
	<head>
		<meta charset="UTF-8">
		<title>Formulário de Avaliação</title>
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
        <link href="css/style.css" rel="stylesheet">
	</head>
	<body class="body-index">
    <div class="custom-background"></div>
		<nav class="navbar navbar-default navbar-static-top">
			<div class="container">
				<% if(validacao.length > 0){ %>
					<div class="alert alert-danger">
						<strong>Atenção!</strong>
						<ul>
							<% for(var i = 0; i < validacao.length; i++){ %>
								<li><%= validacao[i].msg %></li>
							<% } %>
						</ul>
					</div>
				<% } %>

                <% if (typeof finalizado != "undefined"){ %>
                    <% console.log("formulario finalizado"); }%>

                <% var route = "cadastrar" %>
                <%  if(number>0){%>
                <%      route = "cadastrarQuests";%>
                <%  }%>
                <% typeof _id == "undefined"?  console.log("not access "): console.log(" access "+_id) %>

                <form id="regForm" action="<%=route%>" method="POST">
                    <h1>Formulario de Avaliação:</h1>

                    <div class="tab">
                        <p><input placeholder="Digite seu email"  type="email" name="_id"  value=" <%= typeof _id == "undefined"? "": _id %>"></p>
                        <p><input placeholder=" Digite seu nome"  type="text" name="name" required></p>
                    </div>
                    <div class="tab">
                        <p>1 - Talvez o teclado virtual tivesse que ser um pouco maior.*</p>
                        <p><input placeholder="Digite sua resposta"  type="text" name="quest1" required></p>
                    </div>
                    <div class="tab">
                        <p>2 - Na sua opinião qual a variável visual teve um nível mais DIFÍCIL de localização durante os testes? *</p>
                        <br>
                        <label><input  type="radio" name="quest2" value="cor" required>Cor</label><br>
                        <label><input  type="radio" name="quest2" value="forma">forma</label><br>
                        <label><input  type="radio" name="quest2" value="textura">textura</label><br>
                    </div>
                    <div class="tab">
                        <p>3 - Na sua opinião qual a variável visual teve um nível mais DIFÍCIL de localização durante os testes? *</p>
                        <label><input class="radio" type="radio" name="quest3" value="cor" required>Cor</label><br>
                        <label><input class="radio" type="radio" name="quest3" value="forma">forma</label><br>
                        <label><input class="radio" type="radio" name="quest3" value="textura">textura</label><br>
                    </div>
                    <div class="tab">
                        <p>4 - Na sua opinião qual a variável visual teve um nível mais DIFÍCIL de localização durante os testes? *</p>
                        <label><input class="radio" type="radio" name="quest4" value="cor" required>Cor</label><br>
                        <label><input class="radio" type="radio" name="quest4" value="forma">forma</label><br>
                        <label><input class="radio" type="radio" name="quest4" value="textura">textura</label><br>
                    </div>
                    <div class="tab">
                        <p>5 - Na sua opinião qual a variável visual teve um nível mais DIFÍCIL de localização durante os testes? *</p>
                        <label><input class="radio" type="radio" name="quest5" value="cor" required>Cor</label><br>
                        <label><input class="radio" type="radio" name="quest5" value="forma">forma</label><br>
                        <label><input class="radio" type="radio" name="quest5" value="textura">textura</label><br>
                    </div>
                    <div class="tab">
                        <p>6 - Na sua opinião qual a variável visual teve um nível mais DIFÍCIL de localização durante os testes? *</p>
                        <label><input class="radio" type="radio" name="quest6" value="cor" required>Cor</label><br>
                        <label><input class="radio" type="radio" name="quest6" value="forma">forma</label><br>
                        <label><input class="radio" type="radio" name="quest6" value="textura">textura</label><br>
                    </div>
                    <div class="tab">
                        <label><input id="number" type="number" name="number" value="<%=number %>" ></label><br>

                    </div>

                    <div style="overflow:auto;">
                        <div style="float:right;">
                            <button type="button" id="prevBtn" onclick="backPrev(-1)">Previous</button>
                            <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
                        </div>
                    </div>
                    <!--citculos dos passos do formulario-->
                    <div style="text-align:center;margin-top:40px;">
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>

                    </div>
                </form>
                <script>
                    let element = document.getElementById("number").value;
                    console.log(element);

                    let currentTab = element;

                    showTab(currentTab);
                    function showTab(n) {
                        // This function will display the specified tab of the form...
                        let x = document.getElementsByClassName("tab");
                        x[n].style.display = "block";
                        //... and fix the Previous/Next buttons:
                        if (n == 0) {
                            document.getElementById("prevBtn").style.display = "none";
                        } else {
                           document.getElementById("prevBtn").style.display = "inline";
                       }
                    if (n == (x.length - 2)) {
                            document.getElementById("nextBtn").innerHTML = "Finalizar";
                        } else {
                            document.getElementById("nextBtn").innerHTML = "next";
                          }
                        //... and run a function that will display the correct step indicator:
                          fixStepIndicator(n)
                      }

                    function backPrev(n) {

                        let x = document.getElementsByClassName("tab");
                        if (n == 1 && !validateForm()) return false;
                        x[currentTab].style.display = "none";
                        currentTab = currentTab -1;
                        if(element>currentTab){
                            console.log(currentTab);
                            document.getElementById("number").value = currentTab;
                        }

                        if (currentTab >= x.length) {
                            document.getElementById("regForm").submit();
                            return false;
                        }
                        showTab(currentTab);
                    }

                      function nextPrev(n) {
                        // Esta função irá descobrir qual guia exibir
                         let x = document.getElementsByClassName("tab");

                         if (n == 1 && !validateForm()) return false;
                          // Saia da função se algum campo da aba atual for inválido:
                          document.getElementById("regForm").submit();
                          x[currentTab].style.display = "none";
                          // Aumenta ou diminui a aba atual em 1:
                           //currentTab = currentTab + n;
                          // se você chegou ao final do formulário ...
                        if(currentTab >= x.length){
                            // ... o formulário é enviado:
                            //document.getElementById("regForm").submit();
                            return false;
                        }
                        showTab(currentTab);
                    }

                    function validateForm() {
                        // Esta função lida com a validação dos campos do formulário
                        let x, y, i, valid = true, count=0;
                        x = document.getElementsByClassName("tab");
                        y = x[currentTab].getElementsByTagName("input");

                        let choices = [];
                        var els = x[currentTab].getElementsByClassName("radio");
                        //alert(els.length.toString());
                        for (let i=0;i<els.length;i++){
                            if ( els[i].checked == false ) {
                                count++;
                                if(count == els.length){
                                els[0].className += " invalid";
                                els[1].className += " invalid";
                                els[2].className += " invalid";

                                valid = false;
                                }else if(count<3){
                                    valid = true;

                                }

                            }
                            //    choices.push(els[i].value);
                          //  }
                        }

                        // Um ​​loop que verifica todos os campos de entrada na guia atual:
                        for (i = 0; i < y.length; i++) {
                            // campo vazio
                            if (y[i].value == "") {
                                // add class invalid:
                                y[i].className += " invalid";
                                valid = false;
                            }
                        }
                        // Se o status válido for verdadeiro, marque a etapa como concluída e válida:
                        if (valid) {
                            document.getElementsByClassName("step")[currentTab].className += " finish";
                        }
                        return valid;// devolve o status válido
                    }

                    function fixStepIndicator(n) {
                        let i, x = document.getElementsByClassName("step");
                        for (i = 0; i < x.length; i++) {
                            x[i].className = x[i].className.replace(" active", "");
                        }
                        x[n].className += " active";
                    }
                </script>

	</body>
</html>